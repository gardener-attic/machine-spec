// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/gardener/machine-spec/cmi.proto

package cmi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PluginCapability_Service_Type int32

const (
	PluginCapability_Service_UNKNOWN PluginCapability_Service_Type = 0
	// CONTROLLER_SERVICE indicates that the Plugin provides RPCs for
	// the ControllerService. Plugins SHOULD provide this capability.
	// In rare cases certain plugins MAY wish to omit the
	// ControllerService entirely from their implementation, but such
	// SHOULD NOT be the common case.
	// The presence of this capability determines whether the CO will
	// attempt to invoke the REQUIRED ControllerService RPCs, as well
	// as specific RPCs as indicated by ControllerGetCapabilities.
	PluginCapability_Service_CONTROLLER_SERVICE PluginCapability_Service_Type = 1
	// VOLUME_ACCESSIBILITY_CONSTRAINTS indicates that the volumes for
	// this plugin MAY NOT be equally accessible by all nodes in the
	// cluster. The CO MUST use the topology information returned by
	// CreateVolumeRequest along with the topology information
	// returned by NodeGetInfo to ensure that a given Machine is
	// accessible from a given node when scheduling workloads.
	PluginCapability_Service_VOLUME_ACCESSIBILITY_CONSTRAINTS PluginCapability_Service_Type = 2
)

var PluginCapability_Service_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "CONTROLLER_SERVICE",
	2: "VOLUME_ACCESSIBILITY_CONSTRAINTS",
}
var PluginCapability_Service_Type_value = map[string]int32{
	"UNKNOWN":                          0,
	"CONTROLLER_SERVICE":               1,
	"VOLUME_ACCESSIBILITY_CONSTRAINTS": 2,
}

func (x PluginCapability_Service_Type) String() string {
	return proto.EnumName(PluginCapability_Service_Type_name, int32(x))
}
func (PluginCapability_Service_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cmi_86817a7a1089ad46, []int{4, 0, 0}
}

type GetPluginInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPluginInfoRequest) Reset()         { *m = GetPluginInfoRequest{} }
func (m *GetPluginInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetPluginInfoRequest) ProtoMessage()    {}
func (*GetPluginInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_86817a7a1089ad46, []int{0}
}
func (m *GetPluginInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPluginInfoRequest.Unmarshal(m, b)
}
func (m *GetPluginInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPluginInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetPluginInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPluginInfoRequest.Merge(dst, src)
}
func (m *GetPluginInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetPluginInfoRequest.Size(m)
}
func (m *GetPluginInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPluginInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPluginInfoRequest proto.InternalMessageInfo

type GetPluginInfoResponse struct {
	// The name MUST follow domain name notation format
	// (https://tools.ietf.org/html/rfc1035#section-2.3.1). It SHOULD
	// include the plugin's host company name and the plugin name,
	// to minimize the possibility of collisions. It MUST be 63
	// characters or less, beginning and ending with an alphanumeric
	// character ([a-z0-9A-Z]) with dashes (-), dots (.), and
	// alphanumerics between. This field is REQUIRED.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// This field is REQUIRED. Value of this field is opaque to the CO.
	VendorVersion string `protobuf:"bytes,2,opt,name=vendor_version,json=vendorVersion,proto3" json:"vendor_version,omitempty"`
	// This field is OPTIONAL. Values are opaque to the CO.
	Manifest             map[string]string `protobuf:"bytes,3,rep,name=manifest,proto3" json:"manifest,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetPluginInfoResponse) Reset()         { *m = GetPluginInfoResponse{} }
func (m *GetPluginInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetPluginInfoResponse) ProtoMessage()    {}
func (*GetPluginInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_86817a7a1089ad46, []int{1}
}
func (m *GetPluginInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPluginInfoResponse.Unmarshal(m, b)
}
func (m *GetPluginInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPluginInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetPluginInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPluginInfoResponse.Merge(dst, src)
}
func (m *GetPluginInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetPluginInfoResponse.Size(m)
}
func (m *GetPluginInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPluginInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPluginInfoResponse proto.InternalMessageInfo

func (m *GetPluginInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetPluginInfoResponse) GetVendorVersion() string {
	if m != nil {
		return m.VendorVersion
	}
	return ""
}

func (m *GetPluginInfoResponse) GetManifest() map[string]string {
	if m != nil {
		return m.Manifest
	}
	return nil
}

type GetPluginCapabilitiesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPluginCapabilitiesRequest) Reset()         { *m = GetPluginCapabilitiesRequest{} }
func (m *GetPluginCapabilitiesRequest) String() string { return proto.CompactTextString(m) }
func (*GetPluginCapabilitiesRequest) ProtoMessage()    {}
func (*GetPluginCapabilitiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_86817a7a1089ad46, []int{2}
}
func (m *GetPluginCapabilitiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPluginCapabilitiesRequest.Unmarshal(m, b)
}
func (m *GetPluginCapabilitiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPluginCapabilitiesRequest.Marshal(b, m, deterministic)
}
func (dst *GetPluginCapabilitiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPluginCapabilitiesRequest.Merge(dst, src)
}
func (m *GetPluginCapabilitiesRequest) XXX_Size() int {
	return xxx_messageInfo_GetPluginCapabilitiesRequest.Size(m)
}
func (m *GetPluginCapabilitiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPluginCapabilitiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPluginCapabilitiesRequest proto.InternalMessageInfo

type GetPluginCapabilitiesResponse struct {
	// All the capabilities that the controller service supports. This
	// field is OPTIONAL.
	Capabilities         []*PluginCapability `protobuf:"bytes,1,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetPluginCapabilitiesResponse) Reset()         { *m = GetPluginCapabilitiesResponse{} }
func (m *GetPluginCapabilitiesResponse) String() string { return proto.CompactTextString(m) }
func (*GetPluginCapabilitiesResponse) ProtoMessage()    {}
func (*GetPluginCapabilitiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_86817a7a1089ad46, []int{3}
}
func (m *GetPluginCapabilitiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPluginCapabilitiesResponse.Unmarshal(m, b)
}
func (m *GetPluginCapabilitiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPluginCapabilitiesResponse.Marshal(b, m, deterministic)
}
func (dst *GetPluginCapabilitiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPluginCapabilitiesResponse.Merge(dst, src)
}
func (m *GetPluginCapabilitiesResponse) XXX_Size() int {
	return xxx_messageInfo_GetPluginCapabilitiesResponse.Size(m)
}
func (m *GetPluginCapabilitiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPluginCapabilitiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPluginCapabilitiesResponse proto.InternalMessageInfo

func (m *GetPluginCapabilitiesResponse) GetCapabilities() []*PluginCapability {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

// Specifies a capability of the plugin.
type PluginCapability struct {
	// Types that are valid to be assigned to Type:
	//	*PluginCapability_Service_
	Type                 isPluginCapability_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PluginCapability) Reset()         { *m = PluginCapability{} }
func (m *PluginCapability) String() string { return proto.CompactTextString(m) }
func (*PluginCapability) ProtoMessage()    {}
func (*PluginCapability) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_86817a7a1089ad46, []int{4}
}
func (m *PluginCapability) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PluginCapability.Unmarshal(m, b)
}
func (m *PluginCapability) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PluginCapability.Marshal(b, m, deterministic)
}
func (dst *PluginCapability) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PluginCapability.Merge(dst, src)
}
func (m *PluginCapability) XXX_Size() int {
	return xxx_messageInfo_PluginCapability.Size(m)
}
func (m *PluginCapability) XXX_DiscardUnknown() {
	xxx_messageInfo_PluginCapability.DiscardUnknown(m)
}

var xxx_messageInfo_PluginCapability proto.InternalMessageInfo

type isPluginCapability_Type interface {
	isPluginCapability_Type()
}

type PluginCapability_Service_ struct {
	Service *PluginCapability_Service `protobuf:"bytes,1,opt,name=service,proto3,oneof"`
}

func (*PluginCapability_Service_) isPluginCapability_Type() {}

func (m *PluginCapability) GetType() isPluginCapability_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *PluginCapability) GetService() *PluginCapability_Service {
	if x, ok := m.GetType().(*PluginCapability_Service_); ok {
		return x.Service
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PluginCapability) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PluginCapability_OneofMarshaler, _PluginCapability_OneofUnmarshaler, _PluginCapability_OneofSizer, []interface{}{
		(*PluginCapability_Service_)(nil),
	}
}

func _PluginCapability_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PluginCapability)
	// type
	switch x := m.Type.(type) {
	case *PluginCapability_Service_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Service); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PluginCapability.Type has unexpected type %T", x)
	}
	return nil
}

func _PluginCapability_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PluginCapability)
	switch tag {
	case 1: // type.service
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PluginCapability_Service)
		err := b.DecodeMessage(msg)
		m.Type = &PluginCapability_Service_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PluginCapability_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PluginCapability)
	// type
	switch x := m.Type.(type) {
	case *PluginCapability_Service_:
		s := proto.Size(x.Service)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type PluginCapability_Service struct {
	Type                 PluginCapability_Service_Type `protobuf:"varint,1,opt,name=type,proto3,enum=cmi.v1.PluginCapability_Service_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *PluginCapability_Service) Reset()         { *m = PluginCapability_Service{} }
func (m *PluginCapability_Service) String() string { return proto.CompactTextString(m) }
func (*PluginCapability_Service) ProtoMessage()    {}
func (*PluginCapability_Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_86817a7a1089ad46, []int{4, 0}
}
func (m *PluginCapability_Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PluginCapability_Service.Unmarshal(m, b)
}
func (m *PluginCapability_Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PluginCapability_Service.Marshal(b, m, deterministic)
}
func (dst *PluginCapability_Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PluginCapability_Service.Merge(dst, src)
}
func (m *PluginCapability_Service) XXX_Size() int {
	return xxx_messageInfo_PluginCapability_Service.Size(m)
}
func (m *PluginCapability_Service) XXX_DiscardUnknown() {
	xxx_messageInfo_PluginCapability_Service.DiscardUnknown(m)
}

var xxx_messageInfo_PluginCapability_Service proto.InternalMessageInfo

func (m *PluginCapability_Service) GetType() PluginCapability_Service_Type {
	if m != nil {
		return m.Type
	}
	return PluginCapability_Service_UNKNOWN
}

type ProbeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProbeRequest) Reset()         { *m = ProbeRequest{} }
func (m *ProbeRequest) String() string { return proto.CompactTextString(m) }
func (*ProbeRequest) ProtoMessage()    {}
func (*ProbeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_86817a7a1089ad46, []int{5}
}
func (m *ProbeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeRequest.Unmarshal(m, b)
}
func (m *ProbeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeRequest.Marshal(b, m, deterministic)
}
func (dst *ProbeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeRequest.Merge(dst, src)
}
func (m *ProbeRequest) XXX_Size() int {
	return xxx_messageInfo_ProbeRequest.Size(m)
}
func (m *ProbeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeRequest proto.InternalMessageInfo

type ProbeResponse struct {
	// Readiness allows a plugin to report its initialization status back
	// to the CO. Initialization for some plugins MAY be time consuming
	// and it is important for a CO to distinguish between the following
	// cases:
	//
	// 1) The plugin is in an unhealthy state and MAY need restarting. In
	//    this case a gRPC error code SHALL be returned.
	// 2) The plugin is still initializing, but is otherwise perfectly
	//    healthy. In this case a successful response SHALL be returned
	//    with a readiness value of `false`. Calls to the plugin's
	//    Controller and/or Node services MAY fail due to an incomplete
	//    initialization state.
	// 3) The plugin has finished initializing and is ready to service
	//    calls to its services. A successful
	//    response is returned with a readiness value of `true`.
	//
	// This field is OPTIONAL. If not present, the caller SHALL assume
	// that the plugin is in a ready state and is accepting calls to its
	// services (according to the plugin's reported
	// capabilities).
	Ready                *wrappers.BoolValue `protobuf:"bytes,1,opt,name=ready,proto3" json:"ready,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ProbeResponse) Reset()         { *m = ProbeResponse{} }
func (m *ProbeResponse) String() string { return proto.CompactTextString(m) }
func (*ProbeResponse) ProtoMessage()    {}
func (*ProbeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_86817a7a1089ad46, []int{6}
}
func (m *ProbeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeResponse.Unmarshal(m, b)
}
func (m *ProbeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeResponse.Marshal(b, m, deterministic)
}
func (dst *ProbeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeResponse.Merge(dst, src)
}
func (m *ProbeResponse) XXX_Size() int {
	return xxx_messageInfo_ProbeResponse.Size(m)
}
func (m *ProbeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeResponse proto.InternalMessageInfo

func (m *ProbeResponse) GetReady() *wrappers.BoolValue {
	if m != nil {
		return m.Ready
	}
	return nil
}

type CreateMachineRequest struct {
	// The suggested name for the machine in the cloud-provider. This field is REQUIRED.
	// It serves two purposes:
	// 1) Idempotency - This name is generated by the CO to achieve
	//    idempotency.  The Plugin SHOULD ensure that multiple
	//    `CreateMachine` calls for the same name do not result in more
	//    than one piece of machine provisioned corresponding to that
	//    name.
	//    In the case of error, the CO MUST handle the gRPC error codes
	//    per the recovery behavior defined in the "CreateVolume Errors"
	//    section below.
	//    The CO is responsible for cleaning up volumes it provisioned
	//    that it no longer needs. If the CO is uncertain whether a Machine
	//    was provisioned or not when a `CreateVolume` call fails, the CO
	//    MAY call `CreateVolume` again, with the same name, to ensure the
	//    Machine exists and to retrieve the Machine's `volume_id` (unless
	//    otherwise prohibited by "CreateVolume Errors").
	// 2) Suggested name - Some storage systems allow callers to specify
	//    an identifier by which to refer to the newly provisioned
	//    storage. If a storage system supports this, it can optionally
	//    use this name as the identifier for the new Machine.
	// Any Unicode string that conforms to the length limit is allowed
	// except those containing the following banned characters:
	// U+0000-U+0008, U+000B, U+000C, U+000E-U+001F, U+007F-U+009F.
	// (These are control characters other than commonly used whitespace.)
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Plugin specific parameters passed in as opaque key-value pairs.
	// This field is OPTIONAL. The Plugin is responsible for parsing and
	// validating these parameters. COs will treat these as opaque.
	Parameters map[string]string `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Secrets required by plugin to complete Machine creation request.
	// This field is OPTIONAL. Refer to the `Secrets Requirements`
	// section on how to use this field.
	Secrets map[string]string `protobuf:"bytes,5,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// ProviderConfig blob available inside the MachineObject.
	Providerconfig       string   `protobuf:"bytes,6,opt,name=providerconfig,proto3" json:"providerconfig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMachineRequest) Reset()         { *m = CreateMachineRequest{} }
func (m *CreateMachineRequest) String() string { return proto.CompactTextString(m) }
func (*CreateMachineRequest) ProtoMessage()    {}
func (*CreateMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_86817a7a1089ad46, []int{7}
}
func (m *CreateMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMachineRequest.Unmarshal(m, b)
}
func (m *CreateMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMachineRequest.Marshal(b, m, deterministic)
}
func (dst *CreateMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMachineRequest.Merge(dst, src)
}
func (m *CreateMachineRequest) XXX_Size() int {
	return xxx_messageInfo_CreateMachineRequest.Size(m)
}
func (m *CreateMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMachineRequest proto.InternalMessageInfo

func (m *CreateMachineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateMachineRequest) GetParameters() map[string]string {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *CreateMachineRequest) GetSecrets() map[string]string {
	if m != nil {
		return m.Secrets
	}
	return nil
}

func (m *CreateMachineRequest) GetProviderconfig() string {
	if m != nil {
		return m.Providerconfig
	}
	return ""
}

type CreateMachineResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ProviderID           string   `protobuf:"bytes,2,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	NodeName             string   `protobuf:"bytes,3,opt,name=NodeName,proto3" json:"NodeName,omitempty"`
	Error                string   `protobuf:"bytes,4,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMachineResponse) Reset()         { *m = CreateMachineResponse{} }
func (m *CreateMachineResponse) String() string { return proto.CompactTextString(m) }
func (*CreateMachineResponse) ProtoMessage()    {}
func (*CreateMachineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_86817a7a1089ad46, []int{8}
}
func (m *CreateMachineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMachineResponse.Unmarshal(m, b)
}
func (m *CreateMachineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMachineResponse.Marshal(b, m, deterministic)
}
func (dst *CreateMachineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMachineResponse.Merge(dst, src)
}
func (m *CreateMachineResponse) XXX_Size() int {
	return xxx_messageInfo_CreateMachineResponse.Size(m)
}
func (m *CreateMachineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMachineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMachineResponse proto.InternalMessageInfo

func (m *CreateMachineResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateMachineResponse) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *CreateMachineResponse) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *CreateMachineResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type DeleteMachineRequest struct {
	// The ID of the Machine to be deprovisioned.
	// This field is REQUIRED.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Secrets required by plugin to complete Machine deletion request.
	// This field is OPTIONAL. Refer to the `Secrets Requirements`
	// section on how to use this field.
	Secrets              map[string]string `protobuf:"bytes,2,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DeleteMachineRequest) Reset()         { *m = DeleteMachineRequest{} }
func (m *DeleteMachineRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteMachineRequest) ProtoMessage()    {}
func (*DeleteMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_86817a7a1089ad46, []int{9}
}
func (m *DeleteMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMachineRequest.Unmarshal(m, b)
}
func (m *DeleteMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMachineRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMachineRequest.Merge(dst, src)
}
func (m *DeleteMachineRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteMachineRequest.Size(m)
}
func (m *DeleteMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMachineRequest proto.InternalMessageInfo

func (m *DeleteMachineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteMachineRequest) GetSecrets() map[string]string {
	if m != nil {
		return m.Secrets
	}
	return nil
}

type DeleteMachineResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMachineResponse) Reset()         { *m = DeleteMachineResponse{} }
func (m *DeleteMachineResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteMachineResponse) ProtoMessage()    {}
func (*DeleteMachineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_86817a7a1089ad46, []int{10}
}
func (m *DeleteMachineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMachineResponse.Unmarshal(m, b)
}
func (m *DeleteMachineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMachineResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteMachineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMachineResponse.Merge(dst, src)
}
func (m *DeleteMachineResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteMachineResponse.Size(m)
}
func (m *DeleteMachineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMachineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMachineResponse proto.InternalMessageInfo

func (m *DeleteMachineResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ListMachinesRequest struct {
	Tags                 []string          `protobuf:"bytes,1,rep,name=Tags,proto3" json:"Tags,omitempty"`
	Secrets              map[string]string `protobuf:"bytes,2,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListMachinesRequest) Reset()         { *m = ListMachinesRequest{} }
func (m *ListMachinesRequest) String() string { return proto.CompactTextString(m) }
func (*ListMachinesRequest) ProtoMessage()    {}
func (*ListMachinesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_86817a7a1089ad46, []int{11}
}
func (m *ListMachinesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMachinesRequest.Unmarshal(m, b)
}
func (m *ListMachinesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMachinesRequest.Marshal(b, m, deterministic)
}
func (dst *ListMachinesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMachinesRequest.Merge(dst, src)
}
func (m *ListMachinesRequest) XXX_Size() int {
	return xxx_messageInfo_ListMachinesRequest.Size(m)
}
func (m *ListMachinesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMachinesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMachinesRequest proto.InternalMessageInfo

func (m *ListMachinesRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ListMachinesRequest) GetSecrets() map[string]string {
	if m != nil {
		return m.Secrets
	}
	return nil
}

type ListMachinesResponse struct {
	Machines             []string `protobuf:"bytes,1,rep,name=Machines,proto3" json:"Machines,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMachinesResponse) Reset()         { *m = ListMachinesResponse{} }
func (m *ListMachinesResponse) String() string { return proto.CompactTextString(m) }
func (*ListMachinesResponse) ProtoMessage()    {}
func (*ListMachinesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_86817a7a1089ad46, []int{12}
}
func (m *ListMachinesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMachinesResponse.Unmarshal(m, b)
}
func (m *ListMachinesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMachinesResponse.Marshal(b, m, deterministic)
}
func (dst *ListMachinesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMachinesResponse.Merge(dst, src)
}
func (m *ListMachinesResponse) XXX_Size() int {
	return xxx_messageInfo_ListMachinesResponse.Size(m)
}
func (m *ListMachinesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMachinesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMachinesResponse proto.InternalMessageInfo

func (m *ListMachinesResponse) GetMachines() []string {
	if m != nil {
		return m.Machines
	}
	return nil
}

type ControllerGetCapabilitiesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControllerGetCapabilitiesRequest) Reset()         { *m = ControllerGetCapabilitiesRequest{} }
func (m *ControllerGetCapabilitiesRequest) String() string { return proto.CompactTextString(m) }
func (*ControllerGetCapabilitiesRequest) ProtoMessage()    {}
func (*ControllerGetCapabilitiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_86817a7a1089ad46, []int{13}
}
func (m *ControllerGetCapabilitiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControllerGetCapabilitiesRequest.Unmarshal(m, b)
}
func (m *ControllerGetCapabilitiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControllerGetCapabilitiesRequest.Marshal(b, m, deterministic)
}
func (dst *ControllerGetCapabilitiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerGetCapabilitiesRequest.Merge(dst, src)
}
func (m *ControllerGetCapabilitiesRequest) XXX_Size() int {
	return xxx_messageInfo_ControllerGetCapabilitiesRequest.Size(m)
}
func (m *ControllerGetCapabilitiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerGetCapabilitiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerGetCapabilitiesRequest proto.InternalMessageInfo

type ControllerGetCapabilitiesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControllerGetCapabilitiesResponse) Reset()         { *m = ControllerGetCapabilitiesResponse{} }
func (m *ControllerGetCapabilitiesResponse) String() string { return proto.CompactTextString(m) }
func (*ControllerGetCapabilitiesResponse) ProtoMessage()    {}
func (*ControllerGetCapabilitiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_86817a7a1089ad46, []int{14}
}
func (m *ControllerGetCapabilitiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControllerGetCapabilitiesResponse.Unmarshal(m, b)
}
func (m *ControllerGetCapabilitiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControllerGetCapabilitiesResponse.Marshal(b, m, deterministic)
}
func (dst *ControllerGetCapabilitiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerGetCapabilitiesResponse.Merge(dst, src)
}
func (m *ControllerGetCapabilitiesResponse) XXX_Size() int {
	return xxx_messageInfo_ControllerGetCapabilitiesResponse.Size(m)
}
func (m *ControllerGetCapabilitiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerGetCapabilitiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerGetCapabilitiesResponse proto.InternalMessageInfo

var E_CmiSecret = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         1059,
	Name:          "cmi.v1.cmi_secret",
	Tag:           "varint,1059,opt,name=cmi_secret,json=cmiSecret",
	Filename:      "github.com/gardener/machine-spec/cmi.proto",
}

func init() {
	proto.RegisterType((*GetPluginInfoRequest)(nil), "cmi.v1.GetPluginInfoRequest")
	proto.RegisterType((*GetPluginInfoResponse)(nil), "cmi.v1.GetPluginInfoResponse")
	proto.RegisterMapType((map[string]string)(nil), "cmi.v1.GetPluginInfoResponse.ManifestEntry")
	proto.RegisterType((*GetPluginCapabilitiesRequest)(nil), "cmi.v1.GetPluginCapabilitiesRequest")
	proto.RegisterType((*GetPluginCapabilitiesResponse)(nil), "cmi.v1.GetPluginCapabilitiesResponse")
	proto.RegisterType((*PluginCapability)(nil), "cmi.v1.PluginCapability")
	proto.RegisterType((*PluginCapability_Service)(nil), "cmi.v1.PluginCapability.Service")
	proto.RegisterType((*ProbeRequest)(nil), "cmi.v1.ProbeRequest")
	proto.RegisterType((*ProbeResponse)(nil), "cmi.v1.ProbeResponse")
	proto.RegisterType((*CreateMachineRequest)(nil), "cmi.v1.CreateMachineRequest")
	proto.RegisterMapType((map[string]string)(nil), "cmi.v1.CreateMachineRequest.ParametersEntry")
	proto.RegisterMapType((map[string]string)(nil), "cmi.v1.CreateMachineRequest.SecretsEntry")
	proto.RegisterType((*CreateMachineResponse)(nil), "cmi.v1.CreateMachineResponse")
	proto.RegisterType((*DeleteMachineRequest)(nil), "cmi.v1.DeleteMachineRequest")
	proto.RegisterMapType((map[string]string)(nil), "cmi.v1.DeleteMachineRequest.SecretsEntry")
	proto.RegisterType((*DeleteMachineResponse)(nil), "cmi.v1.DeleteMachineResponse")
	proto.RegisterType((*ListMachinesRequest)(nil), "cmi.v1.ListMachinesRequest")
	proto.RegisterMapType((map[string]string)(nil), "cmi.v1.ListMachinesRequest.SecretsEntry")
	proto.RegisterType((*ListMachinesResponse)(nil), "cmi.v1.ListMachinesResponse")
	proto.RegisterType((*ControllerGetCapabilitiesRequest)(nil), "cmi.v1.ControllerGetCapabilitiesRequest")
	proto.RegisterType((*ControllerGetCapabilitiesResponse)(nil), "cmi.v1.ControllerGetCapabilitiesResponse")
	proto.RegisterEnum("cmi.v1.PluginCapability_Service_Type", PluginCapability_Service_Type_name, PluginCapability_Service_Type_value)
	proto.RegisterExtension(E_CmiSecret)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IdentityClient is the client API for Identity service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IdentityClient interface {
	GetPluginInfo(ctx context.Context, in *GetPluginInfoRequest, opts ...grpc.CallOption) (*GetPluginInfoResponse, error)
	GetPluginCapabilities(ctx context.Context, in *GetPluginCapabilitiesRequest, opts ...grpc.CallOption) (*GetPluginCapabilitiesResponse, error)
	Probe(ctx context.Context, in *ProbeRequest, opts ...grpc.CallOption) (*ProbeResponse, error)
}

type identityClient struct {
	cc *grpc.ClientConn
}

func NewIdentityClient(cc *grpc.ClientConn) IdentityClient {
	return &identityClient{cc}
}

func (c *identityClient) GetPluginInfo(ctx context.Context, in *GetPluginInfoRequest, opts ...grpc.CallOption) (*GetPluginInfoResponse, error) {
	out := new(GetPluginInfoResponse)
	err := c.cc.Invoke(ctx, "/cmi.v1.Identity/GetPluginInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *identityClient) GetPluginCapabilities(ctx context.Context, in *GetPluginCapabilitiesRequest, opts ...grpc.CallOption) (*GetPluginCapabilitiesResponse, error) {
	out := new(GetPluginCapabilitiesResponse)
	err := c.cc.Invoke(ctx, "/cmi.v1.Identity/GetPluginCapabilities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *identityClient) Probe(ctx context.Context, in *ProbeRequest, opts ...grpc.CallOption) (*ProbeResponse, error) {
	out := new(ProbeResponse)
	err := c.cc.Invoke(ctx, "/cmi.v1.Identity/Probe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IdentityServer is the server API for Identity service.
type IdentityServer interface {
	GetPluginInfo(context.Context, *GetPluginInfoRequest) (*GetPluginInfoResponse, error)
	GetPluginCapabilities(context.Context, *GetPluginCapabilitiesRequest) (*GetPluginCapabilitiesResponse, error)
	Probe(context.Context, *ProbeRequest) (*ProbeResponse, error)
}

func RegisterIdentityServer(s *grpc.Server, srv IdentityServer) {
	s.RegisterService(&_Identity_serviceDesc, srv)
}

func _Identity_GetPluginInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPluginInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentityServer).GetPluginInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmi.v1.Identity/GetPluginInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentityServer).GetPluginInfo(ctx, req.(*GetPluginInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Identity_GetPluginCapabilities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPluginCapabilitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentityServer).GetPluginCapabilities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmi.v1.Identity/GetPluginCapabilities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentityServer).GetPluginCapabilities(ctx, req.(*GetPluginCapabilitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Identity_Probe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProbeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentityServer).Probe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmi.v1.Identity/Probe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentityServer).Probe(ctx, req.(*ProbeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Identity_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cmi.v1.Identity",
	HandlerType: (*IdentityServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPluginInfo",
			Handler:    _Identity_GetPluginInfo_Handler,
		},
		{
			MethodName: "GetPluginCapabilities",
			Handler:    _Identity_GetPluginCapabilities_Handler,
		},
		{
			MethodName: "Probe",
			Handler:    _Identity_Probe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/gardener/machine-spec/cmi.proto",
}

// ControllerClient is the client API for Controller service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControllerClient interface {
	CreateMachine(ctx context.Context, in *CreateMachineRequest, opts ...grpc.CallOption) (*CreateMachineResponse, error)
	DeleteMachine(ctx context.Context, in *DeleteMachineRequest, opts ...grpc.CallOption) (*DeleteMachineResponse, error)
	ListMachines(ctx context.Context, in *ListMachinesRequest, opts ...grpc.CallOption) (*ListMachinesResponse, error)
	ControllerGetCapabilities(ctx context.Context, in *ControllerGetCapabilitiesRequest, opts ...grpc.CallOption) (*ControllerGetCapabilitiesResponse, error)
}

type controllerClient struct {
	cc *grpc.ClientConn
}

func NewControllerClient(cc *grpc.ClientConn) ControllerClient {
	return &controllerClient{cc}
}

func (c *controllerClient) CreateMachine(ctx context.Context, in *CreateMachineRequest, opts ...grpc.CallOption) (*CreateMachineResponse, error) {
	out := new(CreateMachineResponse)
	err := c.cc.Invoke(ctx, "/cmi.v1.Controller/CreateMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) DeleteMachine(ctx context.Context, in *DeleteMachineRequest, opts ...grpc.CallOption) (*DeleteMachineResponse, error) {
	out := new(DeleteMachineResponse)
	err := c.cc.Invoke(ctx, "/cmi.v1.Controller/DeleteMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) ListMachines(ctx context.Context, in *ListMachinesRequest, opts ...grpc.CallOption) (*ListMachinesResponse, error) {
	out := new(ListMachinesResponse)
	err := c.cc.Invoke(ctx, "/cmi.v1.Controller/ListMachines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) ControllerGetCapabilities(ctx context.Context, in *ControllerGetCapabilitiesRequest, opts ...grpc.CallOption) (*ControllerGetCapabilitiesResponse, error) {
	out := new(ControllerGetCapabilitiesResponse)
	err := c.cc.Invoke(ctx, "/cmi.v1.Controller/ControllerGetCapabilities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControllerServer is the server API for Controller service.
type ControllerServer interface {
	CreateMachine(context.Context, *CreateMachineRequest) (*CreateMachineResponse, error)
	DeleteMachine(context.Context, *DeleteMachineRequest) (*DeleteMachineResponse, error)
	ListMachines(context.Context, *ListMachinesRequest) (*ListMachinesResponse, error)
	ControllerGetCapabilities(context.Context, *ControllerGetCapabilitiesRequest) (*ControllerGetCapabilitiesResponse, error)
}

func RegisterControllerServer(s *grpc.Server, srv ControllerServer) {
	s.RegisterService(&_Controller_serviceDesc, srv)
}

func _Controller_CreateMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).CreateMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmi.v1.Controller/CreateMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).CreateMachine(ctx, req.(*CreateMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_DeleteMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).DeleteMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmi.v1.Controller/DeleteMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).DeleteMachine(ctx, req.(*DeleteMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_ListMachines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMachinesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).ListMachines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmi.v1.Controller/ListMachines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).ListMachines(ctx, req.(*ListMachinesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_ControllerGetCapabilities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ControllerGetCapabilitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).ControllerGetCapabilities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmi.v1.Controller/ControllerGetCapabilities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).ControllerGetCapabilities(ctx, req.(*ControllerGetCapabilitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Controller_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cmi.v1.Controller",
	HandlerType: (*ControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMachine",
			Handler:    _Controller_CreateMachine_Handler,
		},
		{
			MethodName: "DeleteMachine",
			Handler:    _Controller_DeleteMachine_Handler,
		},
		{
			MethodName: "ListMachines",
			Handler:    _Controller_ListMachines_Handler,
		},
		{
			MethodName: "ControllerGetCapabilities",
			Handler:    _Controller_ControllerGetCapabilities_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/gardener/machine-spec/cmi.proto",
}

func init() {
	proto.RegisterFile("github.com/gardener/machine-spec/cmi.proto", fileDescriptor_cmi_86817a7a1089ad46)
}

var fileDescriptor_cmi_86817a7a1089ad46 = []byte{
	// 930 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x4f, 0x6f, 0xe3, 0x44,
	0x14, 0x8f, 0xf3, 0xa7, 0x4d, 0x5f, 0xff, 0x10, 0x0d, 0xe9, 0xca, 0x98, 0xb6, 0x0a, 0x66, 0x8b,
	0xba, 0xc0, 0x3a, 0x10, 0x24, 0x04, 0x65, 0xf7, 0xd0, 0x64, 0x43, 0x37, 0xda, 0x34, 0x29, 0x4e,
	0xb6, 0x08, 0x24, 0x14, 0x39, 0xce, 0x4b, 0x76, 0x44, 0xe2, 0x31, 0x63, 0x27, 0x28, 0x07, 0x3e,
	0x07, 0xdc, 0xb9, 0x23, 0x3e, 0x0e, 0x5f, 0x80, 0x23, 0x17, 0x8e, 0x9c, 0x90, 0x3d, 0xb6, 0xe3,
	0x78, 0xdd, 0x74, 0x57, 0x88, 0xdb, 0xcc, 0x9b, 0xf7, 0x7e, 0xef, 0xfd, 0xde, 0xbf, 0x81, 0xf7,
	0x27, 0xd4, 0x7d, 0x31, 0x1f, 0x6a, 0x26, 0x9b, 0x55, 0x27, 0x06, 0x1f, 0xa1, 0x85, 0xbc, 0x3a,
	0x33, 0xcc, 0x17, 0xd4, 0xc2, 0x87, 0x8e, 0x8d, 0x66, 0xd5, 0x9c, 0x51, 0xcd, 0xe6, 0xcc, 0x65,
	0x64, 0xcb, 0x3b, 0x2e, 0x3e, 0x56, 0x2a, 0x13, 0xc6, 0x26, 0x53, 0xac, 0xfa, 0xd2, 0xe1, 0x7c,
	0x5c, 0x1d, 0xa1, 0x63, 0x72, 0x6a, 0xbb, 0x8c, 0x0b, 0x4d, 0xe5, 0x24, 0xa9, 0xf1, 0x23, 0x37,
	0x6c, 0x1b, 0xb9, 0x23, 0xde, 0xd5, 0x7b, 0x50, 0xbe, 0x44, 0xf7, 0x7a, 0x3a, 0x9f, 0x50, 0xab,
	0x65, 0x8d, 0x99, 0x8e, 0x3f, 0xcc, 0xd1, 0x71, 0xd5, 0x3f, 0x24, 0x38, 0x4c, 0x3c, 0x38, 0x36,
	0xb3, 0x1c, 0x24, 0x04, 0xf2, 0x96, 0x31, 0x43, 0x59, 0xaa, 0x48, 0x67, 0x3b, 0xba, 0x7f, 0x26,
	0xa7, 0x70, 0xb0, 0x40, 0x6b, 0xc4, 0xf8, 0x60, 0x81, 0xdc, 0xa1, 0xcc, 0x92, 0xb3, 0xfe, 0xeb,
	0xbe, 0x90, 0xde, 0x08, 0x21, 0xb9, 0x84, 0xe2, 0xcc, 0xb0, 0xe8, 0x18, 0x1d, 0x57, 0xce, 0x55,
	0x72, 0x67, 0xbb, 0xb5, 0x0f, 0x34, 0xc1, 0x44, 0x4b, 0xf5, 0xa5, 0x5d, 0x05, 0xda, 0x4d, 0xcb,
	0xe5, 0x4b, 0x3d, 0x32, 0x56, 0xbe, 0x80, 0xfd, 0xb5, 0x27, 0x52, 0x82, 0xdc, 0xf7, 0xb8, 0x0c,
	0x62, 0xf2, 0x8e, 0xa4, 0x0c, 0x85, 0x85, 0x31, 0x9d, 0x63, 0x10, 0x89, 0xb8, 0x9c, 0x67, 0x3f,
	0x93, 0xd4, 0x13, 0x38, 0x8a, 0xbc, 0x35, 0x0c, 0xdb, 0x18, 0xd2, 0x29, 0x75, 0x29, 0x3a, 0x21,
	0xf5, 0xef, 0xe0, 0xf8, 0x96, 0xf7, 0x20, 0x03, 0x8f, 0x60, 0xcf, 0x8c, 0xc9, 0x65, 0xc9, 0xa7,
	0x22, 0x87, 0x54, 0x12, 0x96, 0x4b, 0x7d, 0x4d, 0x5b, 0xfd, 0x5b, 0x82, 0x52, 0x52, 0x85, 0x3c,
	0x82, 0x6d, 0x07, 0xf9, 0x82, 0x9a, 0x22, 0xaf, 0xbb, 0xb5, 0xca, 0x6d, 0x68, 0x5a, 0x4f, 0xe8,
	0x3d, 0xcd, 0xe8, 0xa1, 0x89, 0xf2, 0xb3, 0x04, 0xdb, 0x81, 0x98, 0x7c, 0x0e, 0x79, 0x77, 0x69,
	0x0b, 0x98, 0x83, 0xda, 0xe9, 0x5d, 0x30, 0x5a, 0x7f, 0x69, 0xa3, 0xee, 0x9b, 0xa8, 0x5f, 0x41,
	0xde, 0xbb, 0x91, 0x5d, 0xd8, 0x7e, 0xde, 0x79, 0xd6, 0xe9, 0x7e, 0xdd, 0x29, 0x65, 0xc8, 0x3d,
	0x20, 0x8d, 0x6e, 0xa7, 0xaf, 0x77, 0xdb, 0xed, 0xa6, 0x3e, 0xe8, 0x35, 0xf5, 0x9b, 0x56, 0xa3,
	0x59, 0x92, 0xc8, 0x7d, 0xa8, 0xdc, 0x74, 0xdb, 0xcf, 0xaf, 0x9a, 0x83, 0x8b, 0x46, 0xa3, 0xd9,
	0xeb, 0xb5, 0xea, 0xad, 0x76, 0xab, 0xff, 0xcd, 0xa0, 0xd1, 0xed, 0xf4, 0xfa, 0xfa, 0x45, 0xab,
	0xd3, 0xef, 0x95, 0xb2, 0xf5, 0x2d, 0x11, 0x8d, 0x7a, 0x00, 0x7b, 0xd7, 0x9c, 0x0d, 0x31, 0xcc,
	0xf1, 0x05, 0xec, 0x07, 0xf7, 0x20, 0xa7, 0x1f, 0x41, 0x81, 0xa3, 0x31, 0x5a, 0x06, 0xf4, 0x15,
	0x4d, 0xf4, 0xad, 0x16, 0xf6, 0xad, 0x56, 0x67, 0x6c, 0x7a, 0xe3, 0xd5, 0x50, 0x17, 0x8a, 0xea,
	0x9f, 0x59, 0x28, 0x37, 0x38, 0x1a, 0x2e, 0x5e, 0x89, 0x21, 0x09, 0xb0, 0x53, 0x1b, 0xb4, 0x0d,
	0x60, 0x1b, 0xdc, 0x98, 0xa1, 0x8b, 0xdc, 0x91, 0xf3, 0x7e, 0xc1, 0x3e, 0x0c, 0x73, 0x93, 0x86,
	0xa2, 0x5d, 0x47, 0xea, 0xa2, 0xf9, 0x62, 0xf6, 0xe4, 0xa9, 0x57, 0x2d, 0x93, 0xa3, 0xeb, 0xc8,
	0x05, 0x1f, 0xea, 0xc1, 0x46, 0xa8, 0x9e, 0xd0, 0xf5, 0x71, 0xea, 0xb9, 0x5f, 0xea, 0x92, 0x1e,
	0x9a, 0x93, 0xf7, 0xe0, 0xc0, 0xe6, 0x6c, 0x41, 0x47, 0xc8, 0x4d, 0x66, 0x8d, 0xe9, 0x44, 0xde,
	0xf2, 0xa3, 0x4e, 0x48, 0x95, 0xc7, 0xf0, 0x46, 0x22, 0xa0, 0xd7, 0x69, 0x79, 0xe5, 0x1c, 0xf6,
	0xe2, 0x41, 0xbc, 0xd6, 0xb8, 0xfc, 0x04, 0x87, 0x09, 0x56, 0x1b, 0x16, 0xc1, 0x09, 0xc0, 0x75,
	0x10, 0x79, 0xeb, 0x49, 0x80, 0x15, 0x93, 0x10, 0x05, 0x8a, 0x1d, 0x36, 0xc2, 0x8e, 0x67, 0x97,
	0xf3, 0x5f, 0xa3, 0xbb, 0x17, 0x42, 0x93, 0x73, 0xc6, 0xe5, 0xbc, 0x08, 0xc1, 0xbf, 0xa8, 0xbf,
	0x4b, 0x50, 0x7e, 0x82, 0x53, 0x7c, 0xa5, 0x32, 0xc7, 0x0a, 0x93, 0x5d, 0x2f, 0x4c, 0x1a, 0xc4,
	0x86, 0xc2, 0xfc, 0xa7, 0x8c, 0x3d, 0x84, 0xc3, 0x84, 0xbb, 0x20, 0x63, 0x11, 0x43, 0x29, 0xce,
	0xf0, 0x37, 0x09, 0xde, 0x6c, 0x53, 0xc7, 0x0d, 0xb4, 0x9d, 0x18, 0xc1, 0xbe, 0x31, 0x11, 0xeb,
	0x65, 0x47, 0xf7, 0xcf, 0xe4, 0x32, 0x49, 0xf0, 0x2c, 0x24, 0x98, 0x82, 0xf0, 0x7f, 0xf1, 0xab,
	0x41, 0x79, 0xdd, 0x5b, 0x40, 0x4f, 0x81, 0x62, 0x28, 0x0b, 0x82, 0x8e, 0xee, 0xaa, 0x0a, 0x95,
	0x06, 0xb3, 0x5c, 0xce, 0xa6, 0x53, 0xe4, 0x97, 0xe8, 0xa6, 0x2d, 0xde, 0x77, 0xe1, 0x9d, 0x0d,
	0x3a, 0xc2, 0x49, 0xed, 0x1f, 0x09, 0x8a, 0xad, 0x11, 0x5a, 0xae, 0xb7, 0x36, 0x3b, 0xb0, 0xbf,
	0xf6, 0x71, 0x90, 0xa3, 0x5b, 0xfe, 0x13, 0xdf, 0x81, 0x72, 0xbc, 0xf1, 0xb7, 0x51, 0x33, 0x64,
	0x1c, 0xfb, 0xf4, 0xe2, 0xde, 0xc9, 0xfd, 0x97, 0x2c, 0x53, 0x08, 0x28, 0xa7, 0x77, 0x68, 0x45,
	0x7e, 0x3e, 0x85, 0x82, 0xbf, 0xfe, 0x48, 0x39, 0xda, 0xcf, 0xb1, 0xed, 0xa8, 0x1c, 0x26, 0xa4,
	0xa1, 0x5d, 0xed, 0xaf, 0x2c, 0xc0, 0x2a, 0x45, 0x1e, 0xfd, 0xb5, 0xd1, 0x5c, 0xd1, 0x4f, 0xdb,
	0x43, 0x2b, 0xfa, 0xa9, 0xf3, 0xac, 0x66, 0x3c, 0xbc, 0xb5, 0xc6, 0x5d, 0xe1, 0xa5, 0x8d, 0xcf,
	0x0a, 0x2f, 0xb5, 0xdb, 0xd5, 0x0c, 0x79, 0x06, 0x7b, 0xf1, 0x46, 0x21, 0x6f, 0x6f, 0x68, 0x56,
	0xe5, 0x28, 0xfd, 0x31, 0x02, 0xe3, 0xf0, 0xd6, 0xad, 0xdd, 0x41, 0xa2, 0x31, 0xb8, 0xab, 0xc9,
	0x94, 0x07, 0xaf, 0xa0, 0x19, 0xfa, 0x3c, 0x7f, 0x0c, 0x60, 0xce, 0xe8, 0x40, 0x0c, 0x0d, 0x39,
	0x7e, 0xe9, 0x53, 0xfa, 0x92, 0xe2, 0x74, 0xd4, 0xb5, 0x5d, 0xca, 0x2c, 0x47, 0xfe, 0xb5, 0x58,
	0x91, 0xce, 0x8a, 0xfa, 0x8e, 0x39, 0xa3, 0x62, 0xb4, 0xea, 0x85, 0x6f, 0x73, 0xe6, 0x8c, 0x0e,
	0xb7, 0x7c, 0xfd, 0x4f, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x0c, 0x64, 0x34, 0xec, 0xe2, 0x09,
	0x00, 0x00,
}
