// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/gardener/machine-spec/cmi.proto

package cmi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PluginCapability_Service_Type int32

const (
	PluginCapability_Service_UNKNOWN            PluginCapability_Service_Type = 0
	PluginCapability_Service_CONTROLLER_SERVICE PluginCapability_Service_Type = 1
)

var PluginCapability_Service_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "CONTROLLER_SERVICE",
}
var PluginCapability_Service_Type_value = map[string]int32{
	"UNKNOWN":            0,
	"CONTROLLER_SERVICE": 1,
}

func (x PluginCapability_Service_Type) String() string {
	return proto.EnumName(PluginCapability_Service_Type_name, int32(x))
}
func (PluginCapability_Service_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{16, 0, 0}
}

type CreateMachineRequest struct {
	// Name is the name of the machine to be created by driver.
	// This field is REQUIRED.
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	// ProviderSpec is the configuration needed to create a machine in bytes.
	// Driver should parse this raw data into pre-defined spec in their respective projects.
	// This field is REQUIRED.
	ProviderSpec []byte `protobuf:"bytes,2,opt,name=ProviderSpec,proto3" json:"ProviderSpec,omitempty"`
	// Secrets is the map containing necessary credentials for cloud-provider to create the machine.
	// This field is OPTIONAL.
	Secrets              map[string][]byte `protobuf:"bytes,3,rep,name=Secrets,proto3" json:"Secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateMachineRequest) Reset()         { *m = CreateMachineRequest{} }
func (m *CreateMachineRequest) String() string { return proto.CompactTextString(m) }
func (*CreateMachineRequest) ProtoMessage()    {}
func (*CreateMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{0}
}
func (m *CreateMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMachineRequest.Unmarshal(m, b)
}
func (m *CreateMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMachineRequest.Marshal(b, m, deterministic)
}
func (dst *CreateMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMachineRequest.Merge(dst, src)
}
func (m *CreateMachineRequest) XXX_Size() int {
	return xxx_messageInfo_CreateMachineRequest.Size(m)
}
func (m *CreateMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMachineRequest proto.InternalMessageInfo

func (m *CreateMachineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateMachineRequest) GetProviderSpec() []byte {
	if m != nil {
		return m.ProviderSpec
	}
	return nil
}

func (m *CreateMachineRequest) GetSecrets() map[string][]byte {
	if m != nil {
		return m.Secrets
	}
	return nil
}

type CreateMachineResponse struct {
	// Name of the machine to be created.
	// This field is REQUIRED.
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	// MachineID mapped to machine, this id should uniquely identify the real-machine with
	// Machine object by the cloud provider.
	// This field is REQUIRED.
	MachineID string `protobuf:"bytes,2,opt,name=MachineID,proto3" json:"MachineID,omitempty"`
	// NodeName is the name of the node-object registered to kubernetes.
	// This field is REQUIRED.
	NodeName string `protobuf:"bytes,3,opt,name=NodeName,proto3" json:"NodeName,omitempty"`
	// Error is the error thrown by the cloud-provider while creating.
	// It is to be initialized to emptyString `` if no error.
	// But when there is an error, it is to contain the error message.
	// This field is REQUIRED.
	Error                string   `protobuf:"bytes,4,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMachineResponse) Reset()         { *m = CreateMachineResponse{} }
func (m *CreateMachineResponse) String() string { return proto.CompactTextString(m) }
func (*CreateMachineResponse) ProtoMessage()    {}
func (*CreateMachineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{1}
}
func (m *CreateMachineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMachineResponse.Unmarshal(m, b)
}
func (m *CreateMachineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMachineResponse.Marshal(b, m, deterministic)
}
func (dst *CreateMachineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMachineResponse.Merge(dst, src)
}
func (m *CreateMachineResponse) XXX_Size() int {
	return xxx_messageInfo_CreateMachineResponse.Size(m)
}
func (m *CreateMachineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMachineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMachineResponse proto.InternalMessageInfo

func (m *CreateMachineResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateMachineResponse) GetMachineID() string {
	if m != nil {
		return m.MachineID
	}
	return ""
}

func (m *CreateMachineResponse) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *CreateMachineResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type DeleteMachineRequest struct {
	// MachineID is the id of the machine to be deleted.
	// It should uniquely identify the real machine in cloud-provider.
	// This field is REQUIRED.
	MachineID string `protobuf:"bytes,1,opt,name=MachineID,proto3" json:"MachineID,omitempty"`
	// Secrets is the map containing necessary credentials for cloud-provider to delete the machine.
	// This field is OPTIONAL.
	Secrets              map[string][]byte `protobuf:"bytes,2,rep,name=Secrets,proto3" json:"Secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DeleteMachineRequest) Reset()         { *m = DeleteMachineRequest{} }
func (m *DeleteMachineRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteMachineRequest) ProtoMessage()    {}
func (*DeleteMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{2}
}
func (m *DeleteMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMachineRequest.Unmarshal(m, b)
}
func (m *DeleteMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMachineRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMachineRequest.Merge(dst, src)
}
func (m *DeleteMachineRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteMachineRequest.Size(m)
}
func (m *DeleteMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMachineRequest proto.InternalMessageInfo

func (m *DeleteMachineRequest) GetMachineID() string {
	if m != nil {
		return m.MachineID
	}
	return ""
}

func (m *DeleteMachineRequest) GetSecrets() map[string][]byte {
	if m != nil {
		return m.Secrets
	}
	return nil
}

type DeleteMachineResponse struct {
	// Error is the error thrown by the cloud-provider while deleting machine.
	// It is to be initialized to emptyString `` if no error.
	// But when there is an error, it is to contain the error message.
	// This field is REQUIRED.
	Error                string   `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMachineResponse) Reset()         { *m = DeleteMachineResponse{} }
func (m *DeleteMachineResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteMachineResponse) ProtoMessage()    {}
func (*DeleteMachineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{3}
}
func (m *DeleteMachineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMachineResponse.Unmarshal(m, b)
}
func (m *DeleteMachineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMachineResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteMachineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMachineResponse.Merge(dst, src)
}
func (m *DeleteMachineResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteMachineResponse.Size(m)
}
func (m *DeleteMachineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMachineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMachineResponse proto.InternalMessageInfo

func (m *DeleteMachineResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type GetMachineRequest struct {
	// MachineID is the id of the machine whose status is to be determined.
	// It should uniquely identify the real machine in cloud-provider.
	// This field is REQUIRED.
	MachineID string `protobuf:"bytes,1,opt,name=MachineID,proto3" json:"MachineID,omitempty"`
	// Secrets is the map containing necessary credentials for cloud-provider to list the machines.
	// This field is OPTIONAL.
	Secrets              map[string][]byte `protobuf:"bytes,2,rep,name=Secrets,proto3" json:"Secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetMachineRequest) Reset()         { *m = GetMachineRequest{} }
func (m *GetMachineRequest) String() string { return proto.CompactTextString(m) }
func (*GetMachineRequest) ProtoMessage()    {}
func (*GetMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{4}
}
func (m *GetMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMachineRequest.Unmarshal(m, b)
}
func (m *GetMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMachineRequest.Marshal(b, m, deterministic)
}
func (dst *GetMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMachineRequest.Merge(dst, src)
}
func (m *GetMachineRequest) XXX_Size() int {
	return xxx_messageInfo_GetMachineRequest.Size(m)
}
func (m *GetMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMachineRequest proto.InternalMessageInfo

func (m *GetMachineRequest) GetMachineID() string {
	if m != nil {
		return m.MachineID
	}
	return ""
}

func (m *GetMachineRequest) GetSecrets() map[string][]byte {
	if m != nil {
		return m.Secrets
	}
	return nil
}

type GetMachineResponse struct {
	// MachineStatus reflects the status of a VM on the cloud provider
	// This field is REQUIRED.
	Exists bool `protobuf:"varint,1,opt,name=Exists,proto3" json:"Exists,omitempty"`
	// Error is the error thrown by cloud-provider while listing the machines.
	// It is to be initialized to emptyString `` if no error.
	// But when there is an error, it is to contain the error message.
	// This field is REQUIRED.
	Error                string   `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMachineResponse) Reset()         { *m = GetMachineResponse{} }
func (m *GetMachineResponse) String() string { return proto.CompactTextString(m) }
func (*GetMachineResponse) ProtoMessage()    {}
func (*GetMachineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{5}
}
func (m *GetMachineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMachineResponse.Unmarshal(m, b)
}
func (m *GetMachineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMachineResponse.Marshal(b, m, deterministic)
}
func (dst *GetMachineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMachineResponse.Merge(dst, src)
}
func (m *GetMachineResponse) XXX_Size() int {
	return xxx_messageInfo_GetMachineResponse.Size(m)
}
func (m *GetMachineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMachineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMachineResponse proto.InternalMessageInfo

func (m *GetMachineResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

func (m *GetMachineResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ListMachinesRequest struct {
	// ProviderSpec is the configuration needed to list machines.
	// Driver should parse this raw data into pre-defined spec in their respective projects.
	// This field is REQUIRED.
	ProviderSpec []byte `protobuf:"bytes,1,opt,name=ProviderSpec,proto3" json:"ProviderSpec,omitempty"`
	// Secrets is the map containing necessary credentials for cloud-provider to list the machines.
	// This field is OPTIONAL.
	Secrets              map[string][]byte `protobuf:"bytes,3,rep,name=Secrets,proto3" json:"Secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListMachinesRequest) Reset()         { *m = ListMachinesRequest{} }
func (m *ListMachinesRequest) String() string { return proto.CompactTextString(m) }
func (*ListMachinesRequest) ProtoMessage()    {}
func (*ListMachinesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{6}
}
func (m *ListMachinesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMachinesRequest.Unmarshal(m, b)
}
func (m *ListMachinesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMachinesRequest.Marshal(b, m, deterministic)
}
func (dst *ListMachinesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMachinesRequest.Merge(dst, src)
}
func (m *ListMachinesRequest) XXX_Size() int {
	return xxx_messageInfo_ListMachinesRequest.Size(m)
}
func (m *ListMachinesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMachinesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMachinesRequest proto.InternalMessageInfo

func (m *ListMachinesRequest) GetProviderSpec() []byte {
	if m != nil {
		return m.ProviderSpec
	}
	return nil
}

func (m *ListMachinesRequest) GetSecrets() map[string][]byte {
	if m != nil {
		return m.Secrets
	}
	return nil
}

type ListMachinesResponse struct {
	// MachineList is the map of list of machines. Format for the map should be map<MachineID, MachineName>.
	// This field is REQUIRED.
	MachineList map[string]string `protobuf:"bytes,1,rep,name=MachineList,proto3" json:"MachineList,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Error is the error thrown by cloud-provider while listing the machines.
	// It is to be initialized to emptyString `` if no error.
	// But when there is an error, it is to contain the error message.
	// This field is REQUIRED.
	Error                string   `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMachinesResponse) Reset()         { *m = ListMachinesResponse{} }
func (m *ListMachinesResponse) String() string { return proto.CompactTextString(m) }
func (*ListMachinesResponse) ProtoMessage()    {}
func (*ListMachinesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{7}
}
func (m *ListMachinesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMachinesResponse.Unmarshal(m, b)
}
func (m *ListMachinesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMachinesResponse.Marshal(b, m, deterministic)
}
func (dst *ListMachinesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMachinesResponse.Merge(dst, src)
}
func (m *ListMachinesResponse) XXX_Size() int {
	return xxx_messageInfo_ListMachinesResponse.Size(m)
}
func (m *ListMachinesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMachinesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMachinesResponse proto.InternalMessageInfo

func (m *ListMachinesResponse) GetMachineList() map[string]string {
	if m != nil {
		return m.MachineList
	}
	return nil
}

func (m *ListMachinesResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ShutDownMachineRequest struct {
	// MachineID is the id of the machine to be shut-down.
	// It should uniquely identify the real machine in cloud-provider.
	// This field is REQUIRED.
	MachineID string `protobuf:"bytes,1,opt,name=MachineID,proto3" json:"MachineID,omitempty"`
	// Secrets is the map containing necessary credentials for cloud-provider to delete the machine.
	// This field is OPTIONAL.
	Secrets              map[string][]byte `protobuf:"bytes,2,rep,name=Secrets,proto3" json:"Secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ShutDownMachineRequest) Reset()         { *m = ShutDownMachineRequest{} }
func (m *ShutDownMachineRequest) String() string { return proto.CompactTextString(m) }
func (*ShutDownMachineRequest) ProtoMessage()    {}
func (*ShutDownMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{8}
}
func (m *ShutDownMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutDownMachineRequest.Unmarshal(m, b)
}
func (m *ShutDownMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutDownMachineRequest.Marshal(b, m, deterministic)
}
func (dst *ShutDownMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutDownMachineRequest.Merge(dst, src)
}
func (m *ShutDownMachineRequest) XXX_Size() int {
	return xxx_messageInfo_ShutDownMachineRequest.Size(m)
}
func (m *ShutDownMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutDownMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShutDownMachineRequest proto.InternalMessageInfo

func (m *ShutDownMachineRequest) GetMachineID() string {
	if m != nil {
		return m.MachineID
	}
	return ""
}

func (m *ShutDownMachineRequest) GetSecrets() map[string][]byte {
	if m != nil {
		return m.Secrets
	}
	return nil
}

type ShutDownMachineResponse struct {
	// Error is the error thrown by the cloud-provider while shutting down machine.
	// It is to be initialized to emptyString `` if no error.
	// But when there is an error, it is to contain the error message.
	// This field is REQUIRED.
	Error                string   `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShutDownMachineResponse) Reset()         { *m = ShutDownMachineResponse{} }
func (m *ShutDownMachineResponse) String() string { return proto.CompactTextString(m) }
func (*ShutDownMachineResponse) ProtoMessage()    {}
func (*ShutDownMachineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{9}
}
func (m *ShutDownMachineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutDownMachineResponse.Unmarshal(m, b)
}
func (m *ShutDownMachineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutDownMachineResponse.Marshal(b, m, deterministic)
}
func (dst *ShutDownMachineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutDownMachineResponse.Merge(dst, src)
}
func (m *ShutDownMachineResponse) XXX_Size() int {
	return xxx_messageInfo_ShutDownMachineResponse.Size(m)
}
func (m *ShutDownMachineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutDownMachineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShutDownMachineResponse proto.InternalMessageInfo

func (m *ShutDownMachineResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// TODO[hardikdr]: Make use of this field.
type ControllerGetCapabilitiesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControllerGetCapabilitiesRequest) Reset()         { *m = ControllerGetCapabilitiesRequest{} }
func (m *ControllerGetCapabilitiesRequest) String() string { return proto.CompactTextString(m) }
func (*ControllerGetCapabilitiesRequest) ProtoMessage()    {}
func (*ControllerGetCapabilitiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{10}
}
func (m *ControllerGetCapabilitiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControllerGetCapabilitiesRequest.Unmarshal(m, b)
}
func (m *ControllerGetCapabilitiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControllerGetCapabilitiesRequest.Marshal(b, m, deterministic)
}
func (dst *ControllerGetCapabilitiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerGetCapabilitiesRequest.Merge(dst, src)
}
func (m *ControllerGetCapabilitiesRequest) XXX_Size() int {
	return xxx_messageInfo_ControllerGetCapabilitiesRequest.Size(m)
}
func (m *ControllerGetCapabilitiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerGetCapabilitiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerGetCapabilitiesRequest proto.InternalMessageInfo

// TODO[hardikdr]: Make use of this field.
type ControllerGetCapabilitiesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControllerGetCapabilitiesResponse) Reset()         { *m = ControllerGetCapabilitiesResponse{} }
func (m *ControllerGetCapabilitiesResponse) String() string { return proto.CompactTextString(m) }
func (*ControllerGetCapabilitiesResponse) ProtoMessage()    {}
func (*ControllerGetCapabilitiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{11}
}
func (m *ControllerGetCapabilitiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControllerGetCapabilitiesResponse.Unmarshal(m, b)
}
func (m *ControllerGetCapabilitiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControllerGetCapabilitiesResponse.Marshal(b, m, deterministic)
}
func (dst *ControllerGetCapabilitiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerGetCapabilitiesResponse.Merge(dst, src)
}
func (m *ControllerGetCapabilitiesResponse) XXX_Size() int {
	return xxx_messageInfo_ControllerGetCapabilitiesResponse.Size(m)
}
func (m *ControllerGetCapabilitiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerGetCapabilitiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerGetCapabilitiesResponse proto.InternalMessageInfo

type GetPluginInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPluginInfoRequest) Reset()         { *m = GetPluginInfoRequest{} }
func (m *GetPluginInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetPluginInfoRequest) ProtoMessage()    {}
func (*GetPluginInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{12}
}
func (m *GetPluginInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPluginInfoRequest.Unmarshal(m, b)
}
func (m *GetPluginInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPluginInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetPluginInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPluginInfoRequest.Merge(dst, src)
}
func (m *GetPluginInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetPluginInfoRequest.Size(m)
}
func (m *GetPluginInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPluginInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPluginInfoRequest proto.InternalMessageInfo

type GetPluginInfoResponse struct {
	// The name MUST follow domain name notation format
	// (https://tools.ietf.org/html/rfc1035#section-2.3.1). It SHOULD
	// include the plugin's host company name and the plugin name,
	// to minimize the possibility of collisions. It MUST be 63
	// characters or less, beginning and ending with an alphanumeric
	// character ([a-z0-9A-Z]) with dashes (-), dots (.), and
	// alphanumerics between. This field is REQUIRED.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// This field is REQUIRED. Value of this field is opaque to the CO.
	VendorVersion string `protobuf:"bytes,2,opt,name=vendor_version,json=vendorVersion,proto3" json:"vendor_version,omitempty"`
	// This field is OPTIONAL. Values are opaque to the CO.
	Manifest             map[string]string `protobuf:"bytes,3,rep,name=manifest,proto3" json:"manifest,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetPluginInfoResponse) Reset()         { *m = GetPluginInfoResponse{} }
func (m *GetPluginInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetPluginInfoResponse) ProtoMessage()    {}
func (*GetPluginInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{13}
}
func (m *GetPluginInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPluginInfoResponse.Unmarshal(m, b)
}
func (m *GetPluginInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPluginInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetPluginInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPluginInfoResponse.Merge(dst, src)
}
func (m *GetPluginInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetPluginInfoResponse.Size(m)
}
func (m *GetPluginInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPluginInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPluginInfoResponse proto.InternalMessageInfo

func (m *GetPluginInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetPluginInfoResponse) GetVendorVersion() string {
	if m != nil {
		return m.VendorVersion
	}
	return ""
}

func (m *GetPluginInfoResponse) GetManifest() map[string]string {
	if m != nil {
		return m.Manifest
	}
	return nil
}

type GetPluginCapabilitiesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPluginCapabilitiesRequest) Reset()         { *m = GetPluginCapabilitiesRequest{} }
func (m *GetPluginCapabilitiesRequest) String() string { return proto.CompactTextString(m) }
func (*GetPluginCapabilitiesRequest) ProtoMessage()    {}
func (*GetPluginCapabilitiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{14}
}
func (m *GetPluginCapabilitiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPluginCapabilitiesRequest.Unmarshal(m, b)
}
func (m *GetPluginCapabilitiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPluginCapabilitiesRequest.Marshal(b, m, deterministic)
}
func (dst *GetPluginCapabilitiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPluginCapabilitiesRequest.Merge(dst, src)
}
func (m *GetPluginCapabilitiesRequest) XXX_Size() int {
	return xxx_messageInfo_GetPluginCapabilitiesRequest.Size(m)
}
func (m *GetPluginCapabilitiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPluginCapabilitiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPluginCapabilitiesRequest proto.InternalMessageInfo

type GetPluginCapabilitiesResponse struct {
	// All the capabilities that the controller service supports. This
	// field is OPTIONAL.
	Capabilities         []*PluginCapability `protobuf:"bytes,1,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetPluginCapabilitiesResponse) Reset()         { *m = GetPluginCapabilitiesResponse{} }
func (m *GetPluginCapabilitiesResponse) String() string { return proto.CompactTextString(m) }
func (*GetPluginCapabilitiesResponse) ProtoMessage()    {}
func (*GetPluginCapabilitiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{15}
}
func (m *GetPluginCapabilitiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPluginCapabilitiesResponse.Unmarshal(m, b)
}
func (m *GetPluginCapabilitiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPluginCapabilitiesResponse.Marshal(b, m, deterministic)
}
func (dst *GetPluginCapabilitiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPluginCapabilitiesResponse.Merge(dst, src)
}
func (m *GetPluginCapabilitiesResponse) XXX_Size() int {
	return xxx_messageInfo_GetPluginCapabilitiesResponse.Size(m)
}
func (m *GetPluginCapabilitiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPluginCapabilitiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPluginCapabilitiesResponse proto.InternalMessageInfo

func (m *GetPluginCapabilitiesResponse) GetCapabilities() []*PluginCapability {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

// Specifies a capability of the plugin.
type PluginCapability struct {
	// Types that are valid to be assigned to Type:
	//	*PluginCapability_Service_
	Type                 isPluginCapability_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PluginCapability) Reset()         { *m = PluginCapability{} }
func (m *PluginCapability) String() string { return proto.CompactTextString(m) }
func (*PluginCapability) ProtoMessage()    {}
func (*PluginCapability) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{16}
}
func (m *PluginCapability) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PluginCapability.Unmarshal(m, b)
}
func (m *PluginCapability) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PluginCapability.Marshal(b, m, deterministic)
}
func (dst *PluginCapability) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PluginCapability.Merge(dst, src)
}
func (m *PluginCapability) XXX_Size() int {
	return xxx_messageInfo_PluginCapability.Size(m)
}
func (m *PluginCapability) XXX_DiscardUnknown() {
	xxx_messageInfo_PluginCapability.DiscardUnknown(m)
}

var xxx_messageInfo_PluginCapability proto.InternalMessageInfo

type isPluginCapability_Type interface {
	isPluginCapability_Type()
}

type PluginCapability_Service_ struct {
	Service *PluginCapability_Service `protobuf:"bytes,1,opt,name=service,proto3,oneof"`
}

func (*PluginCapability_Service_) isPluginCapability_Type() {}

func (m *PluginCapability) GetType() isPluginCapability_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *PluginCapability) GetService() *PluginCapability_Service {
	if x, ok := m.GetType().(*PluginCapability_Service_); ok {
		return x.Service
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PluginCapability) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PluginCapability_OneofMarshaler, _PluginCapability_OneofUnmarshaler, _PluginCapability_OneofSizer, []interface{}{
		(*PluginCapability_Service_)(nil),
	}
}

func _PluginCapability_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PluginCapability)
	// type
	switch x := m.Type.(type) {
	case *PluginCapability_Service_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Service); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PluginCapability.Type has unexpected type %T", x)
	}
	return nil
}

func _PluginCapability_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PluginCapability)
	switch tag {
	case 1: // type.service
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PluginCapability_Service)
		err := b.DecodeMessage(msg)
		m.Type = &PluginCapability_Service_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PluginCapability_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PluginCapability)
	// type
	switch x := m.Type.(type) {
	case *PluginCapability_Service_:
		s := proto.Size(x.Service)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type PluginCapability_Service struct {
	Type                 PluginCapability_Service_Type `protobuf:"varint,1,opt,name=type,proto3,enum=cmi.v1.PluginCapability_Service_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *PluginCapability_Service) Reset()         { *m = PluginCapability_Service{} }
func (m *PluginCapability_Service) String() string { return proto.CompactTextString(m) }
func (*PluginCapability_Service) ProtoMessage()    {}
func (*PluginCapability_Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{16, 0}
}
func (m *PluginCapability_Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PluginCapability_Service.Unmarshal(m, b)
}
func (m *PluginCapability_Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PluginCapability_Service.Marshal(b, m, deterministic)
}
func (dst *PluginCapability_Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PluginCapability_Service.Merge(dst, src)
}
func (m *PluginCapability_Service) XXX_Size() int {
	return xxx_messageInfo_PluginCapability_Service.Size(m)
}
func (m *PluginCapability_Service) XXX_DiscardUnknown() {
	xxx_messageInfo_PluginCapability_Service.DiscardUnknown(m)
}

var xxx_messageInfo_PluginCapability_Service proto.InternalMessageInfo

func (m *PluginCapability_Service) GetType() PluginCapability_Service_Type {
	if m != nil {
		return m.Type
	}
	return PluginCapability_Service_UNKNOWN
}

type ProbeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProbeRequest) Reset()         { *m = ProbeRequest{} }
func (m *ProbeRequest) String() string { return proto.CompactTextString(m) }
func (*ProbeRequest) ProtoMessage()    {}
func (*ProbeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{17}
}
func (m *ProbeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeRequest.Unmarshal(m, b)
}
func (m *ProbeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeRequest.Marshal(b, m, deterministic)
}
func (dst *ProbeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeRequest.Merge(dst, src)
}
func (m *ProbeRequest) XXX_Size() int {
	return xxx_messageInfo_ProbeRequest.Size(m)
}
func (m *ProbeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeRequest proto.InternalMessageInfo

type ProbeResponse struct {
	Ready                *wrappers.BoolValue `protobuf:"bytes,1,opt,name=ready,proto3" json:"ready,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ProbeResponse) Reset()         { *m = ProbeResponse{} }
func (m *ProbeResponse) String() string { return proto.CompactTextString(m) }
func (*ProbeResponse) ProtoMessage()    {}
func (*ProbeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cmi_4e3107485d637118, []int{18}
}
func (m *ProbeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeResponse.Unmarshal(m, b)
}
func (m *ProbeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeResponse.Marshal(b, m, deterministic)
}
func (dst *ProbeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeResponse.Merge(dst, src)
}
func (m *ProbeResponse) XXX_Size() int {
	return xxx_messageInfo_ProbeResponse.Size(m)
}
func (m *ProbeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeResponse proto.InternalMessageInfo

func (m *ProbeResponse) GetReady() *wrappers.BoolValue {
	if m != nil {
		return m.Ready
	}
	return nil
}

var E_CmiSecret = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         1059,
	Name:          "cmi.v1.cmi_secret",
	Tag:           "varint,1059,opt,name=cmi_secret,json=cmiSecret",
	Filename:      "github.com/gardener/machine-spec/cmi.proto",
}

func init() {
	proto.RegisterType((*CreateMachineRequest)(nil), "cmi.v1.CreateMachineRequest")
	proto.RegisterMapType((map[string][]byte)(nil), "cmi.v1.CreateMachineRequest.SecretsEntry")
	proto.RegisterType((*CreateMachineResponse)(nil), "cmi.v1.CreateMachineResponse")
	proto.RegisterType((*DeleteMachineRequest)(nil), "cmi.v1.DeleteMachineRequest")
	proto.RegisterMapType((map[string][]byte)(nil), "cmi.v1.DeleteMachineRequest.SecretsEntry")
	proto.RegisterType((*DeleteMachineResponse)(nil), "cmi.v1.DeleteMachineResponse")
	proto.RegisterType((*GetMachineRequest)(nil), "cmi.v1.GetMachineRequest")
	proto.RegisterMapType((map[string][]byte)(nil), "cmi.v1.GetMachineRequest.SecretsEntry")
	proto.RegisterType((*GetMachineResponse)(nil), "cmi.v1.GetMachineResponse")
	proto.RegisterType((*ListMachinesRequest)(nil), "cmi.v1.ListMachinesRequest")
	proto.RegisterMapType((map[string][]byte)(nil), "cmi.v1.ListMachinesRequest.SecretsEntry")
	proto.RegisterType((*ListMachinesResponse)(nil), "cmi.v1.ListMachinesResponse")
	proto.RegisterMapType((map[string]string)(nil), "cmi.v1.ListMachinesResponse.MachineListEntry")
	proto.RegisterType((*ShutDownMachineRequest)(nil), "cmi.v1.ShutDownMachineRequest")
	proto.RegisterMapType((map[string][]byte)(nil), "cmi.v1.ShutDownMachineRequest.SecretsEntry")
	proto.RegisterType((*ShutDownMachineResponse)(nil), "cmi.v1.ShutDownMachineResponse")
	proto.RegisterType((*ControllerGetCapabilitiesRequest)(nil), "cmi.v1.ControllerGetCapabilitiesRequest")
	proto.RegisterType((*ControllerGetCapabilitiesResponse)(nil), "cmi.v1.ControllerGetCapabilitiesResponse")
	proto.RegisterType((*GetPluginInfoRequest)(nil), "cmi.v1.GetPluginInfoRequest")
	proto.RegisterType((*GetPluginInfoResponse)(nil), "cmi.v1.GetPluginInfoResponse")
	proto.RegisterMapType((map[string]string)(nil), "cmi.v1.GetPluginInfoResponse.ManifestEntry")
	proto.RegisterType((*GetPluginCapabilitiesRequest)(nil), "cmi.v1.GetPluginCapabilitiesRequest")
	proto.RegisterType((*GetPluginCapabilitiesResponse)(nil), "cmi.v1.GetPluginCapabilitiesResponse")
	proto.RegisterType((*PluginCapability)(nil), "cmi.v1.PluginCapability")
	proto.RegisterType((*PluginCapability_Service)(nil), "cmi.v1.PluginCapability.Service")
	proto.RegisterType((*ProbeRequest)(nil), "cmi.v1.ProbeRequest")
	proto.RegisterType((*ProbeResponse)(nil), "cmi.v1.ProbeResponse")
	proto.RegisterEnum("cmi.v1.PluginCapability_Service_Type", PluginCapability_Service_Type_name, PluginCapability_Service_Type_value)
	proto.RegisterExtension(E_CmiSecret)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MachineClient is the client API for Machine service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MachineClient interface {
	// CreateMachine is the gRPC call to create a machine.
	// This method is REQUIRED.
	CreateMachine(ctx context.Context, in *CreateMachineRequest, opts ...grpc.CallOption) (*CreateMachineResponse, error)
	// DeleteMachine is the gRPC call to delete a machine.
	// This method is REQUIRED.
	DeleteMachine(ctx context.Context, in *DeleteMachineRequest, opts ...grpc.CallOption) (*DeleteMachineResponse, error)
	// GetMachine is the gRPC call to get the status of a machine.
	// This method is OPTIONAL.
	GetMachine(ctx context.Context, in *GetMachineRequest, opts ...grpc.CallOption) (*GetMachineResponse, error)
	// ListMachines is the gRPC call to list machines backed by the providerSpec.
	// This method is OPTIONAL.
	ListMachines(ctx context.Context, in *ListMachinesRequest, opts ...grpc.CallOption) (*ListMachinesResponse, error)
	// ShutDownMachine is the gRPC call to shutdown/power-off a machine.
	// This method is OPTIONAL.
	ShutDownMachine(ctx context.Context, in *ShutDownMachineRequest, opts ...grpc.CallOption) (*ShutDownMachineResponse, error)
	// ControllerGetCapabilities specifies the set of capabilties enabled to the controller.
	// This method is OPTIONAL.
	ControllerGetCapabilities(ctx context.Context, in *ControllerGetCapabilitiesRequest, opts ...grpc.CallOption) (*ControllerGetCapabilitiesResponse, error)
}

type machineClient struct {
	cc *grpc.ClientConn
}

func NewMachineClient(cc *grpc.ClientConn) MachineClient {
	return &machineClient{cc}
}

func (c *machineClient) CreateMachine(ctx context.Context, in *CreateMachineRequest, opts ...grpc.CallOption) (*CreateMachineResponse, error) {
	out := new(CreateMachineResponse)
	err := c.cc.Invoke(ctx, "/cmi.v1.Machine/CreateMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *machineClient) DeleteMachine(ctx context.Context, in *DeleteMachineRequest, opts ...grpc.CallOption) (*DeleteMachineResponse, error) {
	out := new(DeleteMachineResponse)
	err := c.cc.Invoke(ctx, "/cmi.v1.Machine/DeleteMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *machineClient) GetMachine(ctx context.Context, in *GetMachineRequest, opts ...grpc.CallOption) (*GetMachineResponse, error) {
	out := new(GetMachineResponse)
	err := c.cc.Invoke(ctx, "/cmi.v1.Machine/GetMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *machineClient) ListMachines(ctx context.Context, in *ListMachinesRequest, opts ...grpc.CallOption) (*ListMachinesResponse, error) {
	out := new(ListMachinesResponse)
	err := c.cc.Invoke(ctx, "/cmi.v1.Machine/ListMachines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *machineClient) ShutDownMachine(ctx context.Context, in *ShutDownMachineRequest, opts ...grpc.CallOption) (*ShutDownMachineResponse, error) {
	out := new(ShutDownMachineResponse)
	err := c.cc.Invoke(ctx, "/cmi.v1.Machine/ShutDownMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *machineClient) ControllerGetCapabilities(ctx context.Context, in *ControllerGetCapabilitiesRequest, opts ...grpc.CallOption) (*ControllerGetCapabilitiesResponse, error) {
	out := new(ControllerGetCapabilitiesResponse)
	err := c.cc.Invoke(ctx, "/cmi.v1.Machine/ControllerGetCapabilities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MachineServer is the server API for Machine service.
type MachineServer interface {
	// CreateMachine is the gRPC call to create a machine.
	// This method is REQUIRED.
	CreateMachine(context.Context, *CreateMachineRequest) (*CreateMachineResponse, error)
	// DeleteMachine is the gRPC call to delete a machine.
	// This method is REQUIRED.
	DeleteMachine(context.Context, *DeleteMachineRequest) (*DeleteMachineResponse, error)
	// GetMachine is the gRPC call to get the status of a machine.
	// This method is OPTIONAL.
	GetMachine(context.Context, *GetMachineRequest) (*GetMachineResponse, error)
	// ListMachines is the gRPC call to list machines backed by the providerSpec.
	// This method is OPTIONAL.
	ListMachines(context.Context, *ListMachinesRequest) (*ListMachinesResponse, error)
	// ShutDownMachine is the gRPC call to shutdown/power-off a machine.
	// This method is OPTIONAL.
	ShutDownMachine(context.Context, *ShutDownMachineRequest) (*ShutDownMachineResponse, error)
	// ControllerGetCapabilities specifies the set of capabilties enabled to the controller.
	// This method is OPTIONAL.
	ControllerGetCapabilities(context.Context, *ControllerGetCapabilitiesRequest) (*ControllerGetCapabilitiesResponse, error)
}

func RegisterMachineServer(s *grpc.Server, srv MachineServer) {
	s.RegisterService(&_Machine_serviceDesc, srv)
}

func _Machine_CreateMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineServer).CreateMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmi.v1.Machine/CreateMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineServer).CreateMachine(ctx, req.(*CreateMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Machine_DeleteMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineServer).DeleteMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmi.v1.Machine/DeleteMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineServer).DeleteMachine(ctx, req.(*DeleteMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Machine_GetMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineServer).GetMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmi.v1.Machine/GetMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineServer).GetMachine(ctx, req.(*GetMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Machine_ListMachines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMachinesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineServer).ListMachines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmi.v1.Machine/ListMachines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineServer).ListMachines(ctx, req.(*ListMachinesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Machine_ShutDownMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShutDownMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineServer).ShutDownMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmi.v1.Machine/ShutDownMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineServer).ShutDownMachine(ctx, req.(*ShutDownMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Machine_ControllerGetCapabilities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ControllerGetCapabilitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineServer).ControllerGetCapabilities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmi.v1.Machine/ControllerGetCapabilities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineServer).ControllerGetCapabilities(ctx, req.(*ControllerGetCapabilitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Machine_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cmi.v1.Machine",
	HandlerType: (*MachineServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMachine",
			Handler:    _Machine_CreateMachine_Handler,
		},
		{
			MethodName: "DeleteMachine",
			Handler:    _Machine_DeleteMachine_Handler,
		},
		{
			MethodName: "GetMachine",
			Handler:    _Machine_GetMachine_Handler,
		},
		{
			MethodName: "ListMachines",
			Handler:    _Machine_ListMachines_Handler,
		},
		{
			MethodName: "ShutDownMachine",
			Handler:    _Machine_ShutDownMachine_Handler,
		},
		{
			MethodName: "ControllerGetCapabilities",
			Handler:    _Machine_ControllerGetCapabilities_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/gardener/machine-spec/cmi.proto",
}

// IdentityClient is the client API for Identity service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IdentityClient interface {
	GetPluginInfo(ctx context.Context, in *GetPluginInfoRequest, opts ...grpc.CallOption) (*GetPluginInfoResponse, error)
	GetPluginCapabilities(ctx context.Context, in *GetPluginCapabilitiesRequest, opts ...grpc.CallOption) (*GetPluginCapabilitiesResponse, error)
	Probe(ctx context.Context, in *ProbeRequest, opts ...grpc.CallOption) (*ProbeResponse, error)
}

type identityClient struct {
	cc *grpc.ClientConn
}

func NewIdentityClient(cc *grpc.ClientConn) IdentityClient {
	return &identityClient{cc}
}

func (c *identityClient) GetPluginInfo(ctx context.Context, in *GetPluginInfoRequest, opts ...grpc.CallOption) (*GetPluginInfoResponse, error) {
	out := new(GetPluginInfoResponse)
	err := c.cc.Invoke(ctx, "/cmi.v1.Identity/GetPluginInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *identityClient) GetPluginCapabilities(ctx context.Context, in *GetPluginCapabilitiesRequest, opts ...grpc.CallOption) (*GetPluginCapabilitiesResponse, error) {
	out := new(GetPluginCapabilitiesResponse)
	err := c.cc.Invoke(ctx, "/cmi.v1.Identity/GetPluginCapabilities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *identityClient) Probe(ctx context.Context, in *ProbeRequest, opts ...grpc.CallOption) (*ProbeResponse, error) {
	out := new(ProbeResponse)
	err := c.cc.Invoke(ctx, "/cmi.v1.Identity/Probe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IdentityServer is the server API for Identity service.
type IdentityServer interface {
	GetPluginInfo(context.Context, *GetPluginInfoRequest) (*GetPluginInfoResponse, error)
	GetPluginCapabilities(context.Context, *GetPluginCapabilitiesRequest) (*GetPluginCapabilitiesResponse, error)
	Probe(context.Context, *ProbeRequest) (*ProbeResponse, error)
}

func RegisterIdentityServer(s *grpc.Server, srv IdentityServer) {
	s.RegisterService(&_Identity_serviceDesc, srv)
}

func _Identity_GetPluginInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPluginInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentityServer).GetPluginInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmi.v1.Identity/GetPluginInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentityServer).GetPluginInfo(ctx, req.(*GetPluginInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Identity_GetPluginCapabilities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPluginCapabilitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentityServer).GetPluginCapabilities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmi.v1.Identity/GetPluginCapabilities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentityServer).GetPluginCapabilities(ctx, req.(*GetPluginCapabilitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Identity_Probe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProbeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentityServer).Probe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cmi.v1.Identity/Probe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentityServer).Probe(ctx, req.(*ProbeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Identity_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cmi.v1.Identity",
	HandlerType: (*IdentityServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPluginInfo",
			Handler:    _Identity_GetPluginInfo_Handler,
		},
		{
			MethodName: "GetPluginCapabilities",
			Handler:    _Identity_GetPluginCapabilities_Handler,
		},
		{
			MethodName: "Probe",
			Handler:    _Identity_Probe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/gardener/machine-spec/cmi.proto",
}

func init() {
	proto.RegisterFile("github.com/gardener/machine-spec/cmi.proto", fileDescriptor_cmi_4e3107485d637118)
}

var fileDescriptor_cmi_4e3107485d637118 = []byte{
	// 999 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x51, 0x6f, 0xe3, 0x44,
	0x10, 0xce, 0x36, 0x69, 0x9b, 0x4c, 0x93, 0x23, 0x2c, 0x69, 0xc9, 0x99, 0xb6, 0x04, 0x43, 0x51,
	0x8f, 0xaa, 0x0e, 0x04, 0x09, 0x41, 0x39, 0x90, 0x48, 0x1a, 0x72, 0xe5, 0x7a, 0xc9, 0xc9, 0x29,
	0x45, 0x42, 0x42, 0x95, 0xe3, 0x6c, 0xd3, 0x15, 0x8e, 0xd7, 0xb7, 0x76, 0x72, 0x44, 0xfc, 0x00,
	0xfe, 0x02, 0xef, 0xfc, 0x05, 0x9e, 0x90, 0xb8, 0x3f, 0xc0, 0x2b, 0x0f, 0xfc, 0x16, 0x9e, 0x90,
	0xed, 0xb5, 0x63, 0x3b, 0x4e, 0x4a, 0x1f, 0xfa, 0xb6, 0xbb, 0x33, 0xf3, 0xcd, 0x7c, 0xb3, 0x3b,
	0x33, 0x0b, 0x1f, 0x8c, 0xa8, 0x73, 0x33, 0x19, 0x28, 0x3a, 0x1b, 0xd7, 0x47, 0x1a, 0x1f, 0x12,
	0x93, 0xf0, 0xfa, 0x58, 0xd3, 0x6f, 0xa8, 0x49, 0x8e, 0x6d, 0x8b, 0xe8, 0x75, 0x7d, 0x4c, 0x15,
	0x8b, 0x33, 0x87, 0xe1, 0x0d, 0x77, 0x39, 0xfd, 0x48, 0xaa, 0x8d, 0x18, 0x1b, 0x19, 0xa4, 0xee,
	0x9d, 0x0e, 0x26, 0xd7, 0xf5, 0x21, 0xb1, 0x75, 0x4e, 0x2d, 0x87, 0x71, 0x5f, 0x53, 0xda, 0x4f,
	0x6a, 0xbc, 0xe4, 0x9a, 0x65, 0x11, 0x6e, 0xfb, 0x72, 0xf9, 0x6f, 0x04, 0x95, 0x16, 0x27, 0x9a,
	0x43, 0x9e, 0xf9, 0xae, 0x54, 0xf2, 0x62, 0x42, 0x6c, 0x07, 0x63, 0xc8, 0x75, 0xb5, 0x31, 0xa9,
	0xa2, 0x1a, 0x3a, 0x2c, 0xa8, 0xde, 0x1a, 0xcb, 0x50, 0x7c, 0xce, 0xd9, 0x94, 0x0e, 0x09, 0xef,
	0x5b, 0x44, 0xaf, 0xae, 0xd5, 0xd0, 0x61, 0x51, 0x8d, 0x9d, 0xe1, 0x27, 0xb0, 0xd9, 0x27, 0x3a,
	0x27, 0x8e, 0x5d, 0xcd, 0xd6, 0xb2, 0x87, 0x5b, 0x8d, 0x47, 0x8a, 0x1f, 0xac, 0x92, 0xe6, 0x46,
	0x11, 0xba, 0x6d, 0xd3, 0xe1, 0xb3, 0x66, 0xf6, 0xd7, 0x26, 0x52, 0x03, 0x73, 0xe9, 0x04, 0x8a,
	0x51, 0x29, 0x2e, 0x43, 0xf6, 0x47, 0x32, 0x13, 0x01, 0xb9, 0x4b, 0x5c, 0x81, 0xf5, 0xa9, 0x66,
	0x4c, 0x88, 0x08, 0xc4, 0xdf, 0x9c, 0xac, 0x7d, 0x8a, 0xe4, 0x9f, 0x61, 0x3b, 0xe1, 0xce, 0xb6,
	0x98, 0x69, 0x93, 0x54, 0x5a, 0xbb, 0x50, 0x10, 0x6a, 0x67, 0xa7, 0x1e, 0x54, 0x41, 0x9d, 0x1f,
	0x60, 0x09, 0xf2, 0x5d, 0x36, 0x24, 0x9e, 0x55, 0xd6, 0x13, 0x86, 0x7b, 0x37, 0x80, 0x36, 0xe7,
	0x8c, 0x57, 0x73, 0x9e, 0xc0, 0xdf, 0xc8, 0x7f, 0x20, 0xa8, 0x9c, 0x12, 0x83, 0x2c, 0xe4, 0x34,
	0xe6, 0x08, 0x25, 0x1d, 0x45, 0x32, 0xb7, 0x16, 0xcf, 0x5c, 0x1a, 0xd8, 0x7d, 0x65, 0xee, 0x18,
	0xb6, 0x13, 0xee, 0x44, 0xe6, 0x42, 0xae, 0x28, 0xca, 0xf5, 0x77, 0x04, 0xaf, 0x77, 0x88, 0x73,
	0x27, 0xa2, 0xed, 0x24, 0xd1, 0xf7, 0x03, 0xa2, 0x0b, 0x48, 0xf7, 0xc5, 0xb2, 0x09, 0x38, 0xea,
	0x4b, 0x50, 0xdc, 0x81, 0x8d, 0xf6, 0x4f, 0xd4, 0x76, 0x6c, 0x0f, 0x24, 0xaf, 0x8a, 0xdd, 0x9c,
	0xfa, 0x5a, 0x94, 0xfa, 0x2b, 0x04, 0x6f, 0x9c, 0x53, 0x3b, 0x40, 0xb1, 0x03, 0xf2, 0xc9, 0x2a,
	0x41, 0x29, 0x55, 0xd2, 0x49, 0x56, 0xc9, 0x61, 0x90, 0x82, 0x14, 0xc4, 0xfb, 0x4a, 0xc2, 0x9f,
	0x08, 0x2a, 0x71, 0x77, 0x22, 0x0f, 0x3d, 0xd8, 0x12, 0x67, 0xae, 0xb8, 0x8a, 0xbc, 0x08, 0x8f,
	0xd3, 0x23, 0xf4, 0x4d, 0x94, 0x88, 0xbe, 0x17, 0x88, 0x1a, 0x45, 0x48, 0x4f, 0xa0, 0xf4, 0x25,
	0x94, 0x93, 0x66, 0xb7, 0xc5, 0x5f, 0x88, 0xc6, 0xff, 0x0a, 0xc1, 0x4e, 0xff, 0x66, 0xe2, 0x9c,
	0xb2, 0x97, 0xe6, 0x9d, 0x1e, 0xe0, 0x37, 0xc9, 0x07, 0x78, 0x14, 0x70, 0x4b, 0x87, 0xbb, 0xaf,
	0x0b, 0xa8, 0xc3, 0x9b, 0x0b, 0x0e, 0x57, 0x56, 0x9b, 0x0c, 0xb5, 0x16, 0x33, 0x1d, 0xce, 0x0c,
	0x83, 0xf0, 0x0e, 0x71, 0x5a, 0x9a, 0xa5, 0x0d, 0xa8, 0x41, 0x1d, 0x1a, 0x3e, 0x16, 0xf9, 0x5d,
	0x78, 0x67, 0x85, 0x8e, 0x0f, 0x2f, 0xef, 0x40, 0xa5, 0x43, 0x9c, 0xe7, 0xc6, 0x64, 0x44, 0xcd,
	0x33, 0xf3, 0x9a, 0x05, 0xc6, 0xff, 0x20, 0xd8, 0x4e, 0x08, 0xe6, 0x8d, 0xd3, 0x8c, 0x34, 0x4e,
	0x77, 0x8d, 0x0f, 0xe0, 0xc1, 0x94, 0x98, 0x43, 0xc6, 0xaf, 0xa6, 0x84, 0xdb, 0x94, 0x99, 0xe2,
	0x8e, 0x4a, 0xfe, 0xe9, 0xa5, 0x7f, 0x88, 0x3b, 0x90, 0x1f, 0x6b, 0x26, 0xbd, 0x26, 0xb6, 0x23,
	0x5e, 0xfb, 0x51, 0xa4, 0xe0, 0x17, 0x7d, 0x29, 0xcf, 0x84, 0xb6, 0xff, 0x92, 0x42, 0x63, 0xe9,
	0x73, 0x28, 0xc5, 0x44, 0x77, 0x7a, 0x2d, 0xfb, 0xb0, 0x1b, 0x7a, 0x4b, 0xcb, 0xdb, 0x0f, 0xb0,
	0xb7, 0x44, 0x2e, 0x32, 0xf0, 0x18, 0x8a, 0x7a, 0xe4, 0x5c, 0x94, 0x45, 0x35, 0xa0, 0x92, 0xb0,
	0x9c, 0xa9, 0x31, 0x6d, 0xf9, 0x2f, 0x04, 0xe5, 0xa4, 0x0a, 0x7e, 0x0c, 0x9b, 0x36, 0xe1, 0x53,
	0xaa, 0xfb, 0x79, 0xdd, 0x6a, 0xd4, 0x96, 0xa1, 0x29, 0x7d, 0x5f, 0xef, 0x49, 0x46, 0x0d, 0x4c,
	0xa4, 0x17, 0xee, 0x33, 0xf6, 0x96, 0xf8, 0x33, 0xc8, 0x39, 0x33, 0xcb, 0x47, 0x79, 0xd0, 0x38,
	0xb8, 0x0d, 0x45, 0xb9, 0x98, 0x59, 0x44, 0xf5, 0x4c, 0xe4, 0x23, 0xc8, 0xb9, 0x3b, 0xbc, 0x05,
	0x9b, 0xdf, 0x76, 0x9f, 0x76, 0x7b, 0xdf, 0x75, 0xcb, 0x19, 0xbc, 0x03, 0xb8, 0xd5, 0xeb, 0x5e,
	0xa8, 0xbd, 0xf3, 0xf3, 0xb6, 0x7a, 0xd5, 0x6f, 0xab, 0x97, 0x67, 0xad, 0x76, 0x19, 0x35, 0x37,
	0x7c, 0x3f, 0xf2, 0x03, 0xaf, 0xc7, 0x0d, 0x82, 0x02, 0x91, 0xbf, 0x82, 0x92, 0xd8, 0x8b, 0x64,
	0x7d, 0x08, 0xeb, 0x9c, 0x68, 0xc3, 0x99, 0xe0, 0x25, 0x29, 0xfe, 0x3f, 0x44, 0x09, 0xfe, 0x21,
	0x4a, 0x93, 0x31, 0xe3, 0xd2, 0xbd, 0x1c, 0xd5, 0x57, 0x6c, 0xfc, 0x92, 0x83, 0x4d, 0x51, 0x05,
	0xb8, 0x0b, 0xa5, 0xd8, 0xf8, 0xc6, 0xbb, 0xab, 0x3e, 0x11, 0xd2, 0xde, 0x12, 0xa9, 0x78, 0xec,
	0x19, 0x17, 0x2f, 0x36, 0xd4, 0xe6, 0x78, 0x69, 0xa3, 0x75, 0x8e, 0x97, 0x3a, 0x09, 0xe5, 0x0c,
	0x6e, 0x03, 0xcc, 0xc7, 0x07, 0x7e, 0xb8, 0x74, 0x7c, 0x49, 0x52, 0x9a, 0x28, 0x84, 0x79, 0x0a,
	0xc5, 0x68, 0x33, 0xc5, 0x6f, 0xad, 0x18, 0x02, 0xd2, 0xee, 0xaa, 0xfe, 0x2b, 0x67, 0xf0, 0x05,
	0xbc, 0x96, 0x68, 0x26, 0x78, 0x7f, 0x75, 0x5b, 0x93, 0xde, 0x5e, 0x2a, 0x0f, 0x51, 0x39, 0x3c,
	0x5c, 0xda, 0x4d, 0x70, 0x38, 0xb4, 0x6e, 0x6b, 0x4a, 0xd2, 0xa3, 0xff, 0xa1, 0x19, 0xf8, 0x6c,
	0xfc, 0x8b, 0x20, 0x7f, 0x36, 0x24, 0xa6, 0xe3, 0x96, 0x48, 0x17, 0x4a, 0xb1, 0x26, 0x31, 0xbf,
	0xba, 0xb4, 0x06, 0x36, 0xbf, 0xba, 0xd4, 0xce, 0x22, 0x67, 0xf0, 0x75, 0xa4, 0xc1, 0xc5, 0xc8,
	0xbc, 0xb7, 0x60, 0x99, 0x46, 0xe4, 0xe0, 0x16, 0xad, 0xd0, 0xcf, 0x27, 0xb0, 0xee, 0x55, 0x04,
	0xae, 0x84, 0xc5, 0x18, 0x29, 0x18, 0x69, 0x3b, 0x71, 0x1a, 0xd8, 0x9d, 0x7c, 0x01, 0xa0, 0x8f,
	0xe9, 0x95, 0xed, 0xcd, 0x14, 0xbc, 0xb7, 0x50, 0x37, 0x5f, 0x53, 0x62, 0x0c, 0x7b, 0x96, 0x43,
	0x99, 0x69, 0x57, 0x7f, 0xcb, 0x7b, 0xff, 0x94, 0x82, 0x3e, 0xa6, 0xfe, 0x10, 0x6a, 0xae, 0x7f,
	0x9f, 0xd5, 0xc7, 0x74, 0xb0, 0xe1, 0xe9, 0x7f, 0xfc, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8c,
	0x64, 0xad, 0x04, 0x55, 0x0c, 0x00, 0x00,
}
